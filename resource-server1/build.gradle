buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'se.transmode.gradle:gradle-docker:1.2'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

group = 'de.fseebach'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
	springCloudVersion = 'Edgware.SR1'
}

dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-eureka:1.1.5.RELEASE')
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
	compile("com.h2database:h2")

	testCompile('org.springframework.boot:spring-boot-starter-test')

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task buildDocker(type: Docker) {
  baseImage = 'openjdk:8-jdk-alpine'
  push = project.hasProperty('push')
  tag = 'demo/resource-server1'
  addFile {
    from jar
    rename {'app.jar'}
  }
  exposePort(8080)
  entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
}

buildDocker.dependsOn(build)
